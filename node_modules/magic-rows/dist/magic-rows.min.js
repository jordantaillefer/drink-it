/*!
 * 
 *    magic-rows - Adds rows to your forms automagically
 *    Version: 1.0.0
 *    Author: Francois Chalifour
 *    Url: https://github.com/francoischalifour/magic-rows
 *    License: MIT
 * 
 */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("magic-rows",[],e):"object"==typeof exports?exports["magic-rows"]=e():t["magic-rows"]=e()}(this,function(){return function(t){function e(r){if(s[r])return s[r].exports;var o=s[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var s={};return e.m=t,e.c=s,e.p="",e(0)}([function(t,e){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var r=function(){function t(t,e){for(var s=0;s<e.length;s++){var r=e[s];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,s,r){return s&&t(e.prototype,s),r&&t(e,r),e}}(),o=function(){function t(e){s(this,t),e&&(this.rows=Array.from(e.querySelectorAll('input[type="text"], input[type="mail"]')),this.maxRows=e.dataset.maxRows||6,this.placeholderFormat=e.dataset.formatPlaceholder,this.idFormat=e.dataset.formatId,this.nameFormat=e.dataset.formatName,this.noRows=this.rows.length,this.lastRow=this.rows[this.noRows-1],this.addRow=this.addRow.bind(this),this.addEventListeners())}return r(t,[{key:"addEventListeners",value:function(){this.lastRow.addEventListener("focus",this.addRow),this.lastRow.addEventListener("change",this.addRow)}},{key:"removeEventListeners",value:function(){this.lastRow.removeEventListener("focus",this.addRow),this.lastRow.removeEventListener("change",this.addRow)}},{key:"addRow",value:function(){if(!(this.noRows>=this.maxRows)&&(!(this.noRows>1)||this.rows[this.noRows-2].value)){this.removeEventListeners(),this.noRows++;var t=this.cloneRow(this.lastRow),e=this.fillRow(t);this.insertRow(this.lastRow,e),this.lastRow=e,this.rows.push(this.lastRow),this.addEventListeners()}}},{key:"cloneRow",value:function(t){var e=this.lastRow.cloneNode(!0);return e.value="",e}},{key:"fillRow",value:function(t){var e=t.getAttribute("id"),s=t.getAttribute("placeholder"),r=t.getAttribute("name");return e&&t.setAttribute("id",this.getNextValue(e,this.idFormat)),s&&t.setAttribute("placeholder",this.getNextValue(s,this.placeholderFormat)),r&&t.setAttribute("name",this.getNextValue(r,this.nameFormat)),t}},{key:"insertRow",value:function(t,e){t.parentNode.insertBefore(e,t.nextSibling)}},{key:"getNextValue",value:function(t,e){return e?e.includes("$")?e.replace(/\$+/g,this.getPatternNumbers(e,e.split("$").length-1)):e.includes("@")?e.replace("@",this.getLetter(this.guessNextPatternNumber())):this.guessNextValue(t):this.guessNextValue(t)}},{key:"getPatternNumbers",value:function(t,e){return(Array(e).fill("0").join("")+this.guessNextPatternNumber()).slice(-e)}},{key:"guessNextPatternNumber",value:function(){var t=this.lastRow.getAttribute("id")||this.lastRow.getAttribute("name")||this.lastRow.getAttribute("placeholder"),e=Number(t.replace(/^\D+/g,""))+1;return e?e:this.noRows}},{key:"guessNextValue",value:function(t){return this.hasNumber(t)?t.replace(/\d+/g,this.getPatternNumbers(t,t.replace(/^\D+/g,"").length)):t+"-"+this.noRows}},{key:"getLetter",value:function(t){return String.fromCharCode(96+t).toUpperCase()}},{key:"hasNumber",value:function(t){return/\d/.test(t)}}]),t}();window.addEventListener("load",function(){Array.from(document.querySelectorAll('[data-action="magic-rows"]')).forEach(function(t){return new o(t)})})}])});
//# sourceMappingURL=magic-rows.min.js.map