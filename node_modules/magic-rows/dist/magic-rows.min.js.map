{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///magic-rows.min.js","webpack:///webpack/bootstrap fc21f171a7aed8212a69","webpack:///./src/magic-rows.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","MagicRows","form","rows","Array","from","querySelectorAll","maxRows","dataset","placeholderFormat","formatPlaceholder","idFormat","formatId","nameFormat","formatName","noRows","lastRow","addRow","bind","addEventListeners","value","addEventListener","removeEventListener","removeEventListeners","cloneRow","newRow","fillRow","insertRow","push","row","cloneNode","getAttribute","placeholder","name","setAttribute","getNextValue","reference","node","parentNode","insertBefore","nextSibling","format","includes","replace","getPatternNumbers","split","getLetter","guessNextPatternNumber","guessNextValue","noDigits","fill","join","slice","likelyAttribute","numberGuessed","Number","hasNumber","number","String","fromCharCode","toUpperCase","string","test","window","document","forEach"],"mappings":"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","file":"magic-rows.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"magic-rows\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"magic-rows\"] = factory();\n\telse\n\t\troot[\"magic-rows\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"magic-rows\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"magic-rows\"] = factory();\n\telse\n\t\troot[\"magic-rows\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar MagicRows = function () {\n\t  function MagicRows(form) {\n\t    _classCallCheck(this, MagicRows);\n\t\n\t    if (!form) return;\n\t\n\t    this.rows = Array.from(form.querySelectorAll('input[type=\"text\"], input[type=\"mail\"]'));\n\t\n\t    this.maxRows = form.dataset.maxRows || 6;\n\t    this.placeholderFormat = form.dataset.formatPlaceholder;\n\t    this.idFormat = form.dataset.formatId;\n\t    this.nameFormat = form.dataset.formatName;\n\t\n\t    this.noRows = this.rows.length;\n\t    this.lastRow = this.rows[this.noRows - 1];\n\t\n\t    this.addRow = this.addRow.bind(this);\n\t\n\t    this.addEventListeners();\n\t  }\n\t\n\t  _createClass(MagicRows, [{\n\t    key: 'addEventListeners',\n\t    value: function addEventListeners() {\n\t      this.lastRow.addEventListener('focus', this.addRow);\n\t      this.lastRow.addEventListener('change', this.addRow);\n\t    }\n\t  }, {\n\t    key: 'removeEventListeners',\n\t    value: function removeEventListeners() {\n\t      this.lastRow.removeEventListener('focus', this.addRow);\n\t      this.lastRow.removeEventListener('change', this.addRow);\n\t    }\n\t  }, {\n\t    key: 'addRow',\n\t    value: function addRow() {\n\t      if (this.noRows >= this.maxRows) return;\n\t      if (this.noRows > 1) {\n\t        if (!this.rows[this.noRows - 2].value) return;\n\t      }\n\t\n\t      this.removeEventListeners();\n\t\n\t      this.noRows++;\n\t\n\t      var cloneRow = this.cloneRow(this.lastRow);\n\t      var newRow = this.fillRow(cloneRow);\n\t\n\t      this.insertRow(this.lastRow, newRow);\n\t\n\t      this.lastRow = newRow;\n\t      this.rows.push(this.lastRow);\n\t\n\t      this.addEventListeners();\n\t    }\n\t  }, {\n\t    key: 'cloneRow',\n\t    value: function cloneRow(row) {\n\t      var newRow = this.lastRow.cloneNode(true);\n\t      newRow.value = '';\n\t\n\t      return newRow;\n\t    }\n\t  }, {\n\t    key: 'fillRow',\n\t    value: function fillRow(row) {\n\t      var id = row.getAttribute('id');\n\t      var placeholder = row.getAttribute('placeholder');\n\t      var name = row.getAttribute('name');\n\t\n\t      if (id) row.setAttribute('id', this.getNextValue(id, this.idFormat));\n\t      if (placeholder) row.setAttribute('placeholder', this.getNextValue(placeholder, this.placeholderFormat));\n\t      if (name) row.setAttribute('name', this.getNextValue(name, this.nameFormat));\n\t\n\t      return row;\n\t    }\n\t  }, {\n\t    key: 'insertRow',\n\t    value: function insertRow(reference, node) {\n\t      reference.parentNode.insertBefore(node, reference.nextSibling);\n\t    }\n\t  }, {\n\t    key: 'getNextValue',\n\t    value: function getNextValue(value, format) {\n\t      if (format) {\n\t        return format.includes('$') ? format.replace(/\\$+/g, this.getPatternNumbers(format, format.split('$').length - 1)) : format.includes('@') ? format.replace('@', this.getLetter(this.guessNextPatternNumber())) : this.guessNextValue(value);\n\t      } else {\n\t        return this.guessNextValue(value);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getPatternNumbers',\n\t    value: function getPatternNumbers(format, noDigits) {\n\t      return (Array(noDigits).fill('0').join('') + this.guessNextPatternNumber()).slice(-noDigits);\n\t    }\n\t  }, {\n\t    key: 'guessNextPatternNumber',\n\t    value: function guessNextPatternNumber() {\n\t      var likelyAttribute = this.lastRow.getAttribute('id') || this.lastRow.getAttribute('name') || this.lastRow.getAttribute('placeholder');\n\t\n\t      var numberGuessed = Number(likelyAttribute.replace(/^\\D+/g, '')) + 1;\n\t\n\t      return !numberGuessed ? this.noRows : numberGuessed;\n\t    }\n\t  }, {\n\t    key: 'guessNextValue',\n\t    value: function guessNextValue(value) {\n\t      return this.hasNumber(value) ? value.replace(/\\d+/g, this.getPatternNumbers(value, value.replace(/^\\D+/g, '').length)) : value + '-' + this.noRows;\n\t    }\n\t  }, {\n\t    key: 'getLetter',\n\t    value: function getLetter(number) {\n\t      return String.fromCharCode(96 + number).toUpperCase();\n\t    }\n\t  }, {\n\t    key: 'hasNumber',\n\t    value: function hasNumber(string) {\n\t      return (/\\d/.test(string)\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return MagicRows;\n\t}();\n\t\n\twindow.addEventListener('load', function () {\n\t  Array.from(document.querySelectorAll('[data-action=\"magic-rows\"]')).forEach(function (form) {\n\t    return new MagicRows(form);\n\t  });\n\t});\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** magic-rows.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fc21f171a7aed8212a69\n **/","'use strict'\n\nclass MagicRows {\n  constructor (form) {\n    if (!form) return\n\n    this.rows = Array.from(form.querySelectorAll('input[type=\"text\"], input[type=\"mail\"]'))\n\n    this.maxRows = form.dataset.maxRows || 6\n    this.placeholderFormat = form.dataset.formatPlaceholder\n    this.idFormat = form.dataset.formatId\n    this.nameFormat = form.dataset.formatName\n\n    this.noRows = this.rows.length\n    this.lastRow = this.rows[this.noRows - 1]\n\n    this.addRow = this.addRow.bind(this)\n\n    this.addEventListeners()\n  }\n\n  addEventListeners () {\n    this.lastRow.addEventListener('focus', this.addRow)\n    this.lastRow.addEventListener('change', this.addRow)\n  }\n\n  removeEventListeners () {\n    this.lastRow.removeEventListener('focus', this.addRow)\n    this.lastRow.removeEventListener('change', this.addRow)\n  }\n\n  addRow () {\n    if (this.noRows >= this.maxRows) return\n    if (this.noRows > 1) {\n      if (!this.rows[this.noRows - 2].value) return\n    }\n\n    this.removeEventListeners()\n\n    this.noRows++\n\n    const cloneRow = this.cloneRow(this.lastRow)\n    const newRow = this.fillRow(cloneRow)\n\n    this.insertRow(this.lastRow, newRow)\n\n    this.lastRow = newRow\n    this.rows.push(this.lastRow)\n\n    this.addEventListeners()\n  }\n\n  cloneRow (row) {\n    const newRow = this.lastRow.cloneNode(true)\n    newRow.value = ''\n\n    return newRow\n  }\n\n  fillRow (row) {\n    const id = row.getAttribute('id')\n    const placeholder = row.getAttribute('placeholder')\n    const name = row.getAttribute('name')\n\n    if (id) row.setAttribute('id', this.getNextValue(id, this.idFormat))\n    if (placeholder) row.setAttribute('placeholder', this.getNextValue(placeholder, this.placeholderFormat))\n    if (name) row.setAttribute('name', this.getNextValue(name, this.nameFormat))\n\n    return row\n  }\n\n  insertRow (reference, node) {\n    reference.parentNode.insertBefore(node, reference.nextSibling)\n  }\n\n  getNextValue (value, format) {\n    if (format) {\n      return format.includes('$')\n        ? format.replace(/\\$+/g, this.getPatternNumbers(format, format.split('$').length - 1))\n        : format.includes('@')\n          ? format.replace('@', this.getLetter(this.guessNextPatternNumber()))\n          : this.guessNextValue(value)\n    } else {\n      return this.guessNextValue(value)\n    }\n  }\n\n  getPatternNumbers (format, noDigits) {\n    return (Array(noDigits).fill('0').join('') + this.guessNextPatternNumber()).slice(-noDigits)\n  }\n\n  guessNextPatternNumber () {\n    const likelyAttribute =\n      this.lastRow.getAttribute('id') ||\n      this.lastRow.getAttribute('name') ||\n      this.lastRow.getAttribute('placeholder')\n\n    const numberGuessed = Number(likelyAttribute.replace(/^\\D+/g, '')) + 1\n\n    return !numberGuessed ? this.noRows : numberGuessed\n  }\n\n  guessNextValue (value) {\n    return this.hasNumber(value)\n      ? value.replace(/\\d+/g, this.getPatternNumbers(value, value.replace(/^\\D+/g, '').length))\n      : `${value}-${this.noRows}`\n  }\n\n  getLetter (number) {\n    return String.fromCharCode(96 + number).toUpperCase()\n  }\n\n  hasNumber (string) {\n    return /\\d/.test(string)\n  }\n}\n\nwindow.addEventListener('load', () => {\n  Array.from(document.querySelectorAll('[data-action=\"magic-rows\"]'))\n    .forEach(form => new MagicRows(form))\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/magic-rows.js\n **/"],"sourceRoot":""}